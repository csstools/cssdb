---
import FeaturePolyfills from './feature-polyfills.astro';
import CaniuseFeature from './caniuse-feature.astro';
import { parseExample }  from '../../utils/feature-example.js';

const { feature } = Astro.props;
const imageName = `/images/stages/stage-${feature.stage}.svg`;

const [title, description] = await Promise.all([
	Astro.privateRenderMarkdownDoNotUse(feature.title),
	Astro.privateRenderMarkdownDoNotUse(feature.description),
]);

const simpleTitle = title.replace('<p>', '').replace('</p>', '');
const cleanTitle = simpleTitle.replace(/<\/?[^>]+(>|$)/g, '');
const simpleDescription = description.replace('<p>', '').replace('</p>', '');

const stages = [
	'stage-0-aspirational',
	'stage-1-experimental',
	'stage-2-allowable',
	'stage-3-embraced',
	'stage-4-standardized',
]
---
<article class="cssdb-feature" id={feature.id}>
	<header class="cssdb-feature-header">
		<a class="cssdb-feature-stage" href={`#${stages[feature.stage]}`}>
			<img class="cssdb-feature-stage-image" src={imageName} alt="" width="62" height="62" role="presentation" loading="lazy">
		</a>
		<h2 class="cssdb-feature-heading">
			<a href={`#${feature.id}`}>{simpleTitle}</a>
		</h2>
		<p class="cssdb-feature-description">
			{simpleDescription}
		</p>
	</header>
	<pre class="cssdb-feature-example" dir="ltr">{ parseExample(feature.example) }</pre>
	<p class="cssdb-feature-docs">
		<a class="cssdb-feature-docs-link" href={feature.specification}>
			Specification <span class="sr-only">for ${cleanTitle}</span>
		</a>

		{feature.docs?.mdn && (
			<>
				and <a class="cssdb-feature-docs-link"
					href={feature.docs.mdn}
					target="_blank"
					rel="noreferrer"
				>
					MDN documentation <span class="sr-only">for ${cleanTitle}</span>
				</a>
			</>
		)}
	</p>
	<CaniuseFeature feature={feature} title={cleanTitle} />
	<FeaturePolyfills polyfills={feature.polyfills} id={feature.id} title={cleanTitle} />
</article>
